# Generated by Django 4.2.1 on 2024-03-16 15:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(blank=None, max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_password_change', models.DateTimeField(auto_now=True)),
                ('password', models.CharField(max_length=255, verbose_name='password')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='AccessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('RE', 'READER'), ('OW', 'OWNER'), ('CO', 'COMMENTATOR'), ('ED', 'EDITOR')], default='RE', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Charts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_change', models.DateTimeField(auto_now=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_send', models.DateTimeField(auto_now_add=True)),
                ('date_remove', models.DateTimeField(blank=True, null=True)),
                ('date_delivery', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('chart_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_chart', to='users.charts')),
            ],
        ),
        migrations.CreateModel(
            name='FilesType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('files_type', models.CharField(choices=[('CSV', 'CSV'), ('JSON', 'JSON'), ('EXCEL', 'EXCEL'), ('PDF', 'PDF')], default='JSON', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CO', 'Community'), ('MY', 'My Files')], default='MY', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='ReadComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reading', models.DateTimeField(blank=True, null=True)),
                ('comment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_comment', to='users.comments')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_change', models.DateTimeField(auto_now=True)),
                ('date_delete', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('link', models.CharField(max_length=255)),
                ('publish', models.CharField(choices=[(0, 'no'), (1, 'yes')], default=0, max_length=1)),
                ('place_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_place', to='users.place')),
                ('type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_type', to='users.filestype')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('theme', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dushboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_change', models.DateTimeField(auto_now=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dushboard', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='dushboard_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_dushboard', to='users.dushboards'),
        ),
        migrations.AddField(
            model_name='comments',
            name='file_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_file', to='users.files'),
        ),
        migrations.AddField(
            model_name='comments',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_access_open', models.DateTimeField(auto_now=True)),
                ('date_access_close', models.DateTimeField(blank=True, null=True)),
                ('access_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type', to='users.accesstype')),
                ('file_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_file', to='users.files')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
